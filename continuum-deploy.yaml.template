apiVersion: v1
kind: Namespace
metadata:
  name: continuum
  labels:
    app: continuum-server
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: efs-provisioner
  namespace: continuum
data:
  file.system.id: {EFS_ID}
  aws.region: {REGION}
  provisioner.name: continuum.com/continuum-efs
---
kind: Deployment
apiVersion: extensions/v1beta1
metadata:
  name: efs-provisioner
  namespace: continuum
spec:
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: efs-provisioner
    spec:
      containers:
        - name: efs-provisioner
          image: quay.io/external_storage/efs-provisioner:latest
          env:
            - name: FILE_SYSTEM_ID
              valueFrom:
                configMapKeyRef:
                  name: efs-provisioner
                  key: file.system.id
            - name: AWS_REGION
              valueFrom:
                configMapKeyRef:
                  name: efs-provisioner
                  key: aws.region
            - name: PROVISIONER_NAME
              valueFrom:
                configMapKeyRef:
                  name: efs-provisioner
                  key: provisioner.name
          volumeMounts:
            - name: pv-volume
              mountPath: /persistentvolumes
      volumes:
        - name: pv-volume
          nfs:
            server: {EFS_ID}.efs.{REGION}.amazonaws.com
            path: /
---
kind: StorageClass
apiVersion: storage.k8s.io/v1
metadata:
  name: continuum-efs
provisioner: continuum.com/continuum-efs
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: efs
  namespace: continuum
  annotations:
    volume.beta.kubernetes.io/storage-class: "continuum-efs"
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1beta2
kind: StatefulSet
metadata:
  name: continuum-server
  namespace: continuum
spec:
  serviceName: "continuum"
  selector:
    matchLabels:
      app: continuum-server
  replicas: 1
  template:
    metadata:
      labels:
        app: continuum-server
    spec:
      containers:

        - name: mongodb
          image: {MONGODB_IMAGE}
          ports:
            - containerPort: 27017
          resources:
            requests:
              cpu: 200m
          livenessProbe:
            tcpSocket:
              port: 27017
            initialDelaySeconds: 15
            periodSeconds: 15
            failureThreshold: 3
          volumeMounts:
            - name: efsvolume
              mountPath: "/data/db"

        - name: continuum-server
          image: {CONTINUUM_IMAGE}
          command: ["/bin/bash"]
          env:
            - name: CONTINUUM_HOME
              value: /opt/continuum/current
          args:
            - -c
            - sleep 10 && 
              export PATH=$PATH:$CONTINUUM_HOME/common/bin:/opt/continuum/python/bin:$CONTINUUM_HOME/client/bin &&
              export PYTHONPATH=$PYTHONPATH:/opt/continuum/thirdparty/lib:/opt/continuum/current/continuum/client:/opt/continuum/current/common/lib &&
              . /root/.profile &&
              export CONTINUUM_HOME=/opt/continuum/current  &&  
              cd /opt/continuum/current/common/install/ && ./init_mongodb.py -p n813KLVh7sLowt08A66tEQ== >> /dev/null &&  
              ctm-restart-services && tail -f /var/continuum/log/ctm-ui.log
          ports:
            - containerPort: 8080
          resources:
            requests:
              cpu: 200m
          livenessProbe:
            tcpSocket:
              port: 8080
            initialDelaySeconds: 15
            periodSeconds: 15
            failureThreshold: 3

      volumes:
        - name: efsvolume
          persistentVolumeClaim:
            claimName: efs
---
apiVersion: v1
kind: Service
metadata:
  name: continuum-server
  namespace: continuum
spec:
  ports:
  - name: continuum
    port: 80
    targetPort: 8080
  selector:
    app: continuum-server
  type: LoadBalancer

---
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  namespace: continuum 
  name: continuum-autoscaler
spec:
  scaleTargetRef:
    apiVersion: extensions/v1beta1
    kind: Deployment
    name: continuum-server
  minReplicas: 1
  maxReplicas: 5
  targetCPUUtilizationPercentage: 30
